import logging
import sqlite3
import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext, MessageHandler, Filters
from dotenv import load_dotenv
from pathlib import Path


# –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE = 'teamy_bot.db'


def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)."""
    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    c.execute('''
        CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            start_count INTEGER DEFAULT 0,
            analyze_count INTEGER DEFAULT 0,
            analyze_for_me_count INTEGER DEFAULT 0,
            summarize_count INTEGER DEFAULT 0,
            tz_count INTEGER DEFAULT 0
        )
    ''')
    conn.commit()
    conn.close()


def log_command(user_id: int, command: str):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –≤—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    c.execute("SELECT user_id FROM users WHERE user_id = ?", (user_id,))
    if c.fetchone() is None:
        c.execute('''
            INSERT INTO users (user_id, start_count, analyze_count, analyze_for_me_count, summarize_count, tz_count)
            VALUES (?, 0, 0, 0, 0, 0)
        ''', (user_id,))
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã
    if command == '/start':
        c.execute("UPDATE users SET start_count = start_count + 1 WHERE user_id = ?", (user_id,))
    elif command == '/analyze':
        c.execute("UPDATE users SET analyze_count = analyze_count + 1 WHERE user_id = ?", (user_id,))
    elif command == '/analyze_for_me':
        c.execute("UPDATE users SET analyze_for_me_count = analyze_for_me_count + 1 WHERE user_id = ?", (user_id,))
    elif command == '/summarize':
        c.execute("UPDATE users SET summarize_count = summarize_count + 1 WHERE user_id = ?", (user_id,))
    elif command in ['/—Ç–∑', '/tz']:
        c.execute("UPDATE users SET tz_count = tz_count + 1 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()


def start_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user = update.effective_user
    chat_type = update.effective_chat.type
    if chat_type == 'private':
        text = (
            "–ü—Ä–∏–≤–µ—Ç!\n\n"
            "–ú–µ–Ω—è –∑–æ–≤—É—Ç ‚ÄúTeamy‚Äù. –Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã! üî•\n\n"
            "–ß—Ç–æ —è —É–º–µ—é?\n\n"
            "/analyze - –ü–æ–º–æ–≥—É –ø–æ–≤—ã—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
            "/analyze_for_me - –î–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫—É –∫–æ–º–∞–Ω–¥—ã\n"
            "/summarize - –ö—Ä–∞—Ç–∫–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É—é –∫–ª—é—á–µ–≤—ã–µ —Ç–µ–∑–∏—Å—ã –∏ –∏–¥–µ–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∏\n"
            "/tz -  –°–æ—Å—Ç–∞–≤–ª—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏—è (–¢–ó)\n\n"
            "–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º!"
        )
        update.message.reply_text(text)
    else:
        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ /start –≤—ã–∑–≤–∞–Ω–∞ –≤ —á–∞—Ç–µ (–≥—Ä—É–ø–ø–µ)
        text = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç Teamy!\n\n"
            "üõ† –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
            "/premium - –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n"
            "/agree - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ\n"
            "/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n"
            "/analyze - –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π –∏ —Å–æ–≤–µ—Ç–∞–º–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n"
            "/summarize - –ö—Ä–∞—Ç–∫–æ–µ —Å–∞–º–º–∞—Ä–∏ (–≤—ã–∂–∏–º–∫–∞) –∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —á–∞—Ç–∞\n"
            "/analyze_for_me - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "/tz - –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–¢–ó)"
        )
        update.message.reply_text(text)
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã
    log_command(user.id, '/start')


def fallback_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç."""
    text = (
        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –±–æ—Ç–∞ Teamy –Ω–∞ –Ω–∞—à–µ–º "
        "–¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ @V_komade."
    )
    update.message.reply_text(text)
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    command = update.message.text.split()[0]
    log_command(update.effective_user.id, command)


def new_chat_members(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É."""
    for new_member in update.message.new_chat_members:
        if new_member.id == context.bot.id:
            text = (
                "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç Teamy!\n\n"
                "üõ† –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                "/premium - –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n"
                "/agree - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ\n"
                "/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n"
                "/analyze - –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π –∏ —Å–æ–≤–µ—Ç–∞–º–∏ "
                "–ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n"
                "/summarize - –ö—Ä–∞—Ç–∫–æ–µ —Å–∞–º–º–∞—Ä–∏ (–≤—ã–∂–∏–º–∫–∞) –∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —á–∞—Ç–∞\n"
                "/analyze_for_me - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                "/tz - –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–¢–ó)"
            )
            update.message.reply_text(text)
            break


def main():
    logging.basicConfig(
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
    )
    init_db()

    load_dotenv(dotenv_path=Path('.') / 'config.env')

    TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
    if not TELEGRAM_BOT_TOKEN:
        print("–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        return

    updater = Updater(
        TELEGRAM_BOT_TOKEN,
        request_kwargs={'read_timeout': 20, 'connect_timeout': 20}
    )
    dispatcher = updater.dispatcher

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è /start
    dispatcher.add_handler(CommandHandler("start", start_command))
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    for cmd in ["analyze", "analyze_for_me", "summarize", "tz", "premium", "agree", "settings"]:
        dispatcher.add_handler(CommandHandler(cmd, fallback_command))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É
    dispatcher.add_handler(MessageHandler(Filters.status_update.new_chat_members, new_chat_members))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
